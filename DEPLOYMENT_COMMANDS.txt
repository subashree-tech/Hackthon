====================================================================
  KIDS COLORING PAGE GENERATOR - DEPLOYMENT COMMANDS
====================================================================

üìã QUICK COPY-PASTE COMMANDS FOR DEPLOYMENT

====================================================================
STEP 1: CREATE GITHUB REPOSITORY
====================================================================

1. Go to: https://github.com/new
2. Repository name: coloring-page-backend
3. Description: Kids Coloring Page Generator - Backend API
4. Make it Public or Private (your choice)
5. DO NOT initialize with README, .gitignore, or license
6. Click "Create repository"

====================================================================
STEP 2: PUSH TO GITHUB (PowerShell/Terminal)
====================================================================

cd Hackthon

git init

git add .

git commit -m "Backend ready for Vercel deployment"

# ‚ö†Ô∏è REPLACE YOUR_USERNAME and YOUR_REPO with your actual values!
git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git

git branch -M main

git push -u origin main

# If authentication fails, use Personal Access Token from:
# https://github.com/settings/tokens

====================================================================
STEP 3: DEPLOY TO VERCEL
====================================================================

üåê Go to: https://vercel.com

1. Click "Add New Project"
2. Click "Import Git Repository"
3. Select your GitHub repository
4. Click "Import"

5. Configure Project:
   - Framework Preset: Other
   - Root Directory: ./
   - Build Command: (leave empty)
   - Output Directory: (leave empty)
   - Install Command: pip install -r requirements.txt

6. Click "Environment Variables" and add these:

   Key: STABILITY_API_KEY
   Value: [Your Stability AI API key]

   Key: OPENAI_API_KEY
   Value: [Your OpenAI API key]

   Key: SECRET_KEY
   Value: [Generate with command below]

   Key: FLASK_ENV
   Value: production

7. Click "Deploy"

8. Wait 1-2 minutes ‚òï

9. Copy your deployment URL!

====================================================================
GENERATE SECRET KEY
====================================================================

# On Windows PowerShell:
python -c "import secrets; print(secrets.token_hex(32))"

# On Linux/Mac:
python3 -c "import secrets; print(secrets.token_hex(32))"

====================================================================
GET YOUR API KEYS
====================================================================

Stability AI API Key:
üåê https://platform.stability.ai/
1. Sign up/Login
2. Go to API Keys
3. Create new key
4. Copy the key

OpenAI API Key:
üåê https://platform.openai.com/api-keys
1. Sign up/Login
2. Create new secret key
3. Copy the key

====================================================================
STEP 4: TEST YOUR DEPLOYMENT
====================================================================

# Replace YOUR_PROJECT_URL with your actual Vercel URL

# Test 1: Health Check
curl https://YOUR_PROJECT_URL.vercel.app/api/health

# Test 2: Generate Image (PowerShell)
$body = @{prompt="A cute cat"} | ConvertTo-Json
Invoke-RestMethod -Uri "https://YOUR_PROJECT_URL.vercel.app/api/generate" -Method POST -Body $body -ContentType "application/json"

# Test 2: Generate Image (Linux/Mac/Git Bash)
curl -X POST https://YOUR_PROJECT_URL.vercel.app/api/generate \
  -H "Content-Type: application/json" \
  -d '{"prompt": "A cute cat"}'

====================================================================
STEP 5: SHARE WITH FRONTEND TEAM
====================================================================

Send them:

1. API Base URL:
   https://YOUR_PROJECT_URL.vercel.app

2. Files to share:
   - FRONTEND_INTEGRATION_GUIDE.md
   - README_API.md

3. Quick example to test:
   
   const response = await fetch('https://YOUR_PROJECT_URL.vercel.app/api/generate', {
     method: 'POST',
     headers: { 'Content-Type': 'application/json' },
     body: JSON.stringify({ prompt: 'A cute dolphin' })
   });
   const data = await response.json();
   console.log(data);

====================================================================
FUTURE UPDATES (Auto-Deploy)
====================================================================

# Make changes to your code

git add .

git commit -m "Description of changes"

git push origin main

# Vercel will automatically deploy! üöÄ

====================================================================
TROUBLESHOOTING
====================================================================

‚ùå Git push fails:
   - Use Personal Access Token instead of password
   - Get from: https://github.com/settings/tokens

‚ùå Vercel deployment fails:
   - Check build logs in Vercel dashboard
   - Verify requirements.txt has all dependencies

‚ùå API returns 500 error:
   - Check environment variables are set correctly
   - View function logs in Vercel dashboard

‚ùå CORS errors:
   - CORS is already enabled
   - Make sure you're using https:// not http://

‚ùå Timeout errors:
   - Image generation takes 5-10 seconds
   - Increase frontend timeout to 30 seconds

====================================================================
USEFUL LINKS
====================================================================

GitHub: https://github.com
Vercel Dashboard: https://vercel.com/dashboard
Stability AI: https://platform.stability.ai/
OpenAI: https://platform.openai.com/

Your Backend Repo: https://github.com/YOUR_USERNAME/YOUR_REPO
Your API Endpoint: https://YOUR_PROJECT_URL.vercel.app

====================================================================
VERCEL CLI (OPTIONAL - Advanced Users)
====================================================================

# Install Vercel CLI
npm install -g vercel

# Login
vercel login

# Deploy from command line
cd Hackthon
vercel

# Deploy to production
vercel --prod

# Add environment variables via CLI
vercel env add STABILITY_API_KEY
vercel env add OPENAI_API_KEY
vercel env add SECRET_KEY

====================================================================
CHECKLIST
====================================================================

Before deployment:
[ ] GitHub repository created
[ ] Vercel account created
[ ] Stability AI API key ready
[ ] OpenAI API key ready
[ ] Secret key generated

After deployment:
[ ] Health check works
[ ] Image generation works
[ ] Voice-to-text works
[ ] API URL shared with frontend team
[ ] Documentation shared

====================================================================
DONE! üéâ
====================================================================

Your API is now live and ready for the frontend team to use!

Need help? Check the documentation files:
- QUICK_START_DEPLOYMENT.md
- GITHUB_SETUP.md  
- VERCEL_DEPLOYMENT.md
- FRONTEND_INTEGRATION_GUIDE.md

====================================================================

